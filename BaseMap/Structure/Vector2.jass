scope Vector2
    globals
        private Vector2 zero
        private Vector2 right
        private Vector2 up
    endglobals

    struct Vector2
        real X
        real Y
        
        private Vector2 temp
        
        
        private static method onInit takes nothing returns nothing
            set zero = Vector2.Create(0.0, 0.0)
            call zero.temp.Set(1.0, 1.0)
            set right = Vector2.Create(1.0, 0.0)
            call right.temp.Set(-1.0, 0.0)
            set up = Vector2.Create(0.0, 1.0)
            call up.temp.Set(0.0, -1.0)
        endmethod
        
        
        static method operator Zero takes nothing returns thistype
            return zero
        endmethod
        static method operator One takes nothing returns thistype
            return zero.temp
        endmethod
        static method operator Right takes nothing returns thistype
            return right
        endmethod
        static method operator Left takes nothing returns thistype
            return right.temp
        endmethod
        static method operator Up takes nothing returns thistype
            return up
        endmethod
        static method operator Down takes nothing returns thistype
            return up.temp
        endmethod

        
        static method Create takes real x, real y returns thistype
            local thistype this = allocate()
            set X = x
            set Y = y
            set temp = allocate()
            return this
        endmethod
        
        
        method Add takes Vector2 vec2 returns thistype
            set X = X + vec2.X
            set Y = Y + vec2.Y
            return this
        endmethod
        
        method Subtrct takes Vector2 vec2 returns thistype
            set X = X - vec2.X
            set Y = Y - vec2.Y
            return this
        endmethod
        
        method Multiple takes real value returns thistype
            set X = X * value
            set Y = Y * value
            return this
        endmethod
        
        method Divide takes real value returns thistype
            set X = X / value
            set Y = Y / value
            return this
        endmethod
        
        method Copy takes Vector2 vec2 returns thistype
            set X = vec2.X
            set Y = vec2.Y
            return this
        endmethod
        
        method Set takes real x, real y returns thistype
            set X = x
            set Y = y
            return this
        endmethod
        
        method Dot takes Vector2 vec2 returns real
            return (X * vec2.X) + (Y * vec2.Y)
        endmethod
        
        
        method operator MagnitudeSquared takes nothing returns real
            return (X * X) + (Y * Y)
        endmethod
        
        
        method operator Magnitude takes nothing returns real
            return SquareRoot((X * X) + (Y * Y))
        endmethod
        
        
        method operator Normalize takes nothing returns Vector2
            local real magnitude = (X * X) + (Y * Y)
            if magnitude == 1.0 then
                return this
            elseif magnitude == 0.0 then
                return zero
            endif
            set magnitude = 1 / SquareRoot(magnitude)
            return temp.Copy(this).Multiple(magnitude)
        endmethod

        
        method Destroy takes nothing returns nothing
            call temp.deallocate()
            set temp = 0
            call deallocate()
            set this = 0
        endmethod
    endstruct
endscope